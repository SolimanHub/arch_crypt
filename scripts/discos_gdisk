#!/usr/bin/env bash
set -euo pipefail
trap 'echo "Error en línea $LINENO. Comando: $BASH_COMMAND"' ERR
# Configurar colores
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
NC='\033[0m'

echo -e "\nDiscos disponibles para trabajar:"
echo -e "\033[32mSelecciona uno (ej: sda):\033[0m"
echo
lsblk -d -o NAME,SIZE,TYPE | grep disk
echo
read -p "Disco (ej. sda): " unidad
DISCO="/dev/$unidad"

sed -i "s/instalargruben/$unidad/" ./scripts/grub

if [ ! -b "$DISCO" ]; then
    echo -e "\033[31mError: La unidad '$DISCO' no existe.\033[0m"
    exit 1
fi

# Obtener tamaño total del disco en MB
tamanio_bytes=$(blockdev --getsize64 "$DISCO")
tamanio_mb=$((tamanio_bytes / 1024 / 1024))

# Definir tamaños fijos y calcular espacio flexible
swap_size_mb=2048
overhead=$((swap_size_mb + 1024 + 550))  # 2GB swap + 1GB /boot + 550MB EFI
flexible=$((tamanio_mb - overhead))
flexible_gb=$(( flexible / 1024 ))

echo -e "\nTamaño total del disco: ${tamanio_mb} MB"
echo -e "\033[32mEspacio disponible para distribuir: ${flexible_gb} GB\033[0m"

# Solicitar porcentaje para home
read -rp "Ingrese el porcentaje para /home (1-99, default 50%): " home_percent
home_percent=${home_percent:-50}

# Validar entrada
if [[ ! "$home_percent" =~ ^[0-9]+$ ]] || (( home_percent < 1 || home_percent > 99 )); then
    echo -e "\033[32mValor inválido. Usando 50% por defecto.\033[0m"
    home_percent=50
fi

# Calcular tamaños
home_mb=$(( flexible * home_percent / 100 ))
root_mb=$(( flexible - home_mb ))
root_gb=$(( root_mb / 1024 ))
home_gb=$(( home_mb / 1024 ))

echo -e "\nResumen de particiones:"
echo -e "\033[32m• EFI: 550 MB\033[0m"
echo -e "\033[32m• /boot: 1 GB\033[0m"
echo -e "\033[32m• Swap: 2 GB\033[0m"
echo -e "\033[32m• /home: ${home_gb} GB (${home_percent}%)\033[0m"
echo -e "\033[32m• / (root): ${root_gb} GB\033[0m"

echo -e "\033[32m========================\033[0m"
echo -e "\n=== Particionado con gdisk ==="
gdisk "$DISCO" <<EOF > gdisk.log 2>&1
o
Y
n


+550M
EF00
n


+1G
8300
n


+${swap_size_mb}M
8200
n


+${home_mb}M

n




w
Y
EOF

echo -e "\n=== Formateando particiones ==="
mkfs.fat -F32 "${DISCO}1"   # EFI
sync
mkfs.ext4 "${DISCO}2"       # /boot
sync
mkswap "${DISCO}3"          # Swap
sync

echo -e "\n=== Encriptando particiones ==="
for partition in 4 5; do
    cryptsetup luksFormat --type luks2 \
        --pbkdf argon2id \
        --iter-time 4000 \
        --key-size 512 \
        --hash sha3-512 \
        "${DISCO}${partition}"
done

echo -e "\n=== Abriendo particiones encriptadas ==="
cryptsetup luksOpen "${DISCO}4" home_crypt
cryptsetup luksOpen "${DISCO}5" root_crypt

echo -e "\n=== Formateando particiones encriptadas ==="
mkfs.ext4 /dev/mapper/home_crypt
mkfs.ext4 /dev/mapper/root_crypt

echo -e "\n=== Montando particiones ==="
mount /dev/mapper/root_crypt /mnt
mkdir -p /mnt/boot
mount "${DISCO}2" /mnt/boot
mkdir -p /mnt/boot/efi
mount "${DISCO}1" /mnt/boot/efi
mkdir -p /mnt/home
mount /dev/mapper/home_crypt /mnt/home

echo -e "\nActivando swap..."
swapon "${DISCO}3"

echo -e "\nProceso finalizado."
echo -e "\033[32mSigue ./paquetes\033[0m"

echo -e "\033[32m==== PAQUETES ====\033[0m"
./scripts/paquetes

