#!/usr/bin/env bash
set -euo pipefail
trap 'echo "Error en línea $LINENO. Comando: $BASH_COMMAND"' ERR

# Configurar colores
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
NC='\033[0m'

echo -e "\nDiscos disponibles para trabajar:"
echo -e "\033[32mSelecciona uno (ej: sda):\033[0m"
echo
lsblk -d -o NAME,SIZE,TYPE | grep disk
echo
read -p "Disco (ej. sda): " unidad
DISCO="/dev/$unidad"
sed -i "s/buscarUUID/$unidad/" systemd_boot

if [ ! -b "$DISCO" ]; then
    echo -e "\033[31mError: La unidad '$DISCO' no existe.\033[0m"
    exit 1
fi

# Obtener tamaño total del disco en MB
tamanio_bytes=$(blockdev --getsize64 "$DISCO")
tamanio_mb=$((tamanio_bytes / 1024 / 1024))

# Tamaños fijos
BOOT_SIZE=1024    # MB (1GB)
SWAP_SIZE=2048    # MB (2GB)

# Calcular espacio para LVM
espacio_lvm=$((tamanio_mb - BOOT_SIZE))

# Validar espacio mínimo
if (( espacio_lvm < 3072 )); then  # 3GB mínimo para LVM (swap + root + home)
    echo -e "\033[31mError: Espacio insuficiente. Necesitas al menos 3GB después de /boot.\033[0m"
    exit 1
fi

# Calcular espacio flexible
espacio_flexible=$((espacio_lvm - SWAP_SIZE))
flexible_gb=$((espacio_flexible / 1024))

echo -e "\nTamaño total del disco: ${tamanio_mb} MB"
echo -e "\033[32mEspacio disponible para distribuir: ${flexible_gb} GB\033[0m"

# Solicitar porcentaje para home
read -rp "Ingrese el porcentaje para /home (1-99, default 50%): " home_percent
home_percent=${home_percent:-50}

# Validar entrada
if [[ ! "$home_percent" =~ ^[0-9]+$ ]] || (( home_percent < 1 || home_percent > 99 )); then
    echo -e "\033[32mValor inválido. Usando 50% por defecto.\033[0m"
    home_percent=50
fi

# Calcular tamaños
home_mb=$(( espacio_flexible * home_percent / 100 ))
root_mb=$(( espacio_flexible - home_mb ))

echo -e "\nResumen de particiones:"
echo -e "\033[32m• /boot: 1 GB\033[0m"
echo -e "\033[32m• Swap: 2 GB\033[0m"
echo -e "\033[32m• /home: $((home_mb / 1024)) GB (${home_percent}%)\033[0m"
echo -e "\033[32m• / (root): $((root_mb / 1024)) GB\033[0m"

echo -e "\n=== Particionado con parted ==="
parted "$DISCO" mklabel gpt
parted "$DISCO" mkpart primary ext4 1MiB 1025MiB      # /boot
parted "$DISCO" set 1 boot on
parted "$DISCO" mkpart primary 1025MiB 100%           # LVM

echo -e "\n=== Formateando partición /boot ==="
mkfs.ext4 "${DISCO}1"

echo -e "\n=== Encriptando partición LVM ==="
cryptsetup luksFormat --type luks2 \
    --pbkdf argon2id \
    --iter-time 4000 \
    --key-size 512 \
    --hash sha3-512 \
    "${DISCO}2"

echo -e "\n=== Configurando LVM ==="
cryptsetup open "${DISCO}2" cryptlvm
pvcreate /dev/mapper/cryptlvm
vgcreate vol0 /dev/mapper/cryptlvm

lvcreate -L "${SWAP_SIZE}M" -n swap vol0
lvcreate -L "${home_mb}M" -n home vol0
lvcreate -l 100%FREE -n root vol0

echo -e "\n=== Formateando volúmenes lógicos ==="
mkfs.ext4 /dev/vol0/root
mkfs.ext4 /dev/vol0/home
mkswap /dev/vol0/swap

echo -e "\n=== Montando particiones ==="
mount /dev/vol0/root /mnt
mkdir -p /mnt/boot
mount "${DISCO}1" /mnt/boot
mkdir -p /mnt/home
mount /dev/vol0/home /mnt/home

echo -e "\nActivando swap..."
swapon /dev/vol0/swap

echo -e "\nProceso finalizado."
echo -e "\033[32mSigue ./paquetes\033[0m"

echo -e "\033[32m==== PAQUETES ====\033[0m"
./paquetes

