#!/usr/bin/env bash
set -euo pipefail
trap 'echo "Error en línea $LINENO. Comando: $BASH_COMMAND"' ERR

# Configurar colores
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
NC='\033[0m'
MINIMAL_INSTALL="n"  

# Función para salir ante errores
error_exit() {
    echo -e "\033[31m[ERROR] $1\033[0m" >&2
    exit 1
}

read -rp "¿Desea instalación mínima? [s/N]: " MINIMAL_INSTALL
MINIMAL_INSTALL=${MINIMAL_INSTALL,,}

# Solicitar información
echo -e "${GREEN}== Configuración de instalación de Arch Linux ==${NC}"
# 1. Nombre del host
while :; do
    read -p "Ingrese el nombre del host: " hostname
    [[ -z "$hostname" ]] && echo -e "${RED}El nombre del host no puede estar vacío!${NC}" || break
done
# 2. Password root
while :; do
    read -sp "Ingrese la contraseña para root (no se mostrará): " root_pass
    echo
    read -sp "Confirme la contraseña: " root_pass_confirm
    echo
    [[ "$root_pass" != "$root_pass_confirm" ]] && echo -e "${RED}Las contraseñas no coinciden!${NC}" || break
done
# 3. Nombre de usuario normal
while :; do
    read -p "Ingrese nombre de usuario sin privilegios: " username
    [[ -z "$username" ]] && echo -e "${RED}El nombre de usuario no puede estar vacío!${NC}" || break
done
# 4. Password del usuario
while :; do
    read -sp "Ingrese contraseña para $username (no se mostrará): " user_pass
    echo
    read -sp "Confirme la contraseña: " user_pass_confirm
    echo
    [[ "$user_pass" != "$user_pass_confirm" ]] && echo -e "${RED}Las contraseñas no coinciden!${NC}" || break
done
# Mostrar resumen
echo -e "${GREEN}\n== Configuración completa =="
echo -e "Hostname: ${YELLOW}$hostname${NC}"
echo -e "Usuario root: ${YELLOW}Password establecido${NC}"
echo -e "Usuario normal: ${YELLOW}$username${NC}"
echo -e "Password usuario: ${YELLOW}Password establecido${NC}${GREEN}\n== Continua con la instalación ==${NC}"

# --- Selección de entorno gráfico ---
if [[ "$MINIMAL_INSTALL" != "s" ]]; then
  echo -e "\033[32m===== Selección de entornos gráficos =====\033[0m"
  echo -e "\033[32m1) i3wm (Default)\033[32m"
  echo -e "2) XFCE4\033[0m"
  echo -e "3) GNOME\033[0m"
  echo -e "4) KDE Plasma\033[0m"
  echo -e "5) Hyprland (Wayland moderno)\033[0m"
  echo -e "6) GNOME Minimal\033[0m"
  echo -e "7) Sway (i3 en Wayland)\033[0m"
  echo -e "8) MATE (Clásico ligero)\033[0m"

  select_desktop() {
      read -rp "Opciones (separar por comas) [1]: " desktop_choices
      desktop_choices=${desktop_choices:-1}  # Valor por defecto
      
      local cleaned_choices=()
      IFS=',' read -ra raw_choices <<< "$desktop_choices"
      
      for choice in "${raw_choices[@]}"; do
	  case "$(echo "$choice" | tr -d '[:space:]')" in
	      1|2|3|4|5|6|7|8)
		  cleaned_choices+=("$choice")
		  ;;
	      *)
		  echo -e "${RED}Opción '$choice' inválida. Usando default (1).${NC}"
		  cleaned_choices=(1)
		  break
		  ;;
	  esac
      done
      
      echo "${cleaned_choices[*]}" | tr ' ' ','
  }
  desktop_choices=$(select_desktop)
  sed -i "s/escritorioxyz/$desktop_choices/g" ./scripts/extras
  sed -i "s/instalacion_minimaxyz/$MINIMAL_INSTALL/g" ./scripts/extras
fi

# --- Selección de kernel ---
echo "Seleccionando kernel..."
echo -e "${YELLOW}\n¡Advertencia! ¡Actualmente el instalador solo configura automaticamente el kernel Standard, si prefiere Zen o LTS debera configurarlos manualmente en /boot/loader/entries/arch.conf!${NC}"
echo "===== Selección de Kernel ====="
echo "1) Linux Standard (default)"
echo "2) Linux-Zen (mejor para escritorio)"
echo "3) Linux-LTS (larga vida útil)"
echo "4) Todos los kernels anteriores"

select_kernel() {
    read -rp "Seleccione kernel [1-4]: " kernel_choice
    case "$kernel_choice" in
        2) echo "linux-zen linux-zen-headers" ;;
        3) echo "linux-lts linux-lts-headers" ;;
        4) echo "linux linux-headers linux-zen linux-zen-headers linux-lts linux-lts-headers" ;;
        *) echo "linux linux-headers" ;;
    esac
}

kernel_packages=$(select_kernel)

# Agregando info a los otros scripts
root_pass_escaped=$(sed 's/[\/&]/\\&/g' <<< "$root_pass")
user_pass_escaped=$(sed 's/[\/&]/\\&/g' <<< "$user_pass")
sed -i "s/temporalxyz/$hostname/g" ./scripts/conf
sed -i "s/usuarioxyz/$username/g" ./scripts/usuarios
sed -i "s/usuarioxyz/$username/g" ./scripts/extras
sed -i "s/usuarioxyz/$username/g" ./scripts/zsh
sed -i "s/usuarioxyz/$username/g" ./scripts/yay_install
sed -i "s/tu_password_root/$root_pass_escaped/g" ./scripts/usuarios
sed -i "s/tu_password_usuario/$user_pass_escaped/g" ./scripts/usuarios
sed -i "s/selected_kernelsxyz/$kernel_packages/g" ./scripts/paquetes

echo -e "\033[32m==== DISK ====\033[0m"
./scripts/particionar_montar
