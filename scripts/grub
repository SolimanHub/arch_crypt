#!/usr/bin/bash
set -e -u

# Mostrar las unidades disponibles para que el usuario seleccione dónde instalar GRUB
echo "===== Unidades disponibles para instalar GRUB ====="
lsblk -d -o NAME,SIZE,MODEL
echo
#read -rp "Ingrese el nombre de la unidad (ejemplo: sda): " disk
disk="instalargruben"
GRUB_DISK="/dev/$disk"

# Actualizar las bases para evitar errores
pacman -Syy
pacman -S grub grub-btrfs --noconfirm   # Modificado: agregado grub-btrfs y eliminado efibootmgr

# Verificar si existe una partición EFI montada en /boot/EFI
if ! mountpoint -q /boot/EFI; then
    echo "Error: La partición EFI no está montada en /boot/EFI."
    echo "Asegúrate de haber creado y montado una partición EFI antes de continuar."
    exit 1
fi

# Reemplazar el archivo de configuración de GRUB
if [ -f /etc/default/grub ]; then
    rm /etc/default/grub
fi
mv ./grub_conf /etc/default/grub

# Instalar GRUB en modo UEFI con módulos para LUKS
echo "Instalando GRUB en modo UEFI..."
grub-install --target=x86_64-efi \
    --efi-directory=/boot/EFI \
    --bootloader-id=GRUB \
    --modules="luks2 part_gpt cryptodisk ext2"  # Modificado: agregados módulos y eliminado --removable

# Generar la configuración inicial de GRUB
echo "Generando configuración de GRUB..."
grub-mkconfig -o /boot/grub/grub.cfg

# Regenerar la configuración de GRUB con el nuevo archivo
echo "Regenerando configuración de GRUB..."
grub-mkconfig -o /boot/grub/grub.cfg

# Añadir hooks críticos
sed -i 's/^HOOKS=.*/HOOKS=(base systemd autodetect keyboard sd-vconsole modconf block sd-encrypt lvm2 filesystems fsck)/' /etc/mkinitcpio.conf
mkinitcpio -P  # Regenerar initramfs después de cambiar

# Generar crypttab con UUIDs persistentes
echo "root_crypt UUID=$(blkid -s UUID -o value /dev/sda4) none luks,discard" > /etc/crypttab
echo "home_crypt UUID=$(blkid -s UUID -o value /dev/sda3) none luks,discard" >> /etc/crypttab

# Instalar paquetes extras
echo -e "\033[32m==== EXTRAS ====\033[0m"
./extras
