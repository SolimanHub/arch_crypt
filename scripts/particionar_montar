#!/usr/bin/env bash
set -euo pipefail
trap 'echo "Error en línea $LINENO. Comando: $BASH_COMMAND"' ERR

# Configurar colores
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
NC='\033[0m'

echo -e "\033[32m\nDiscos disponibles para trabajar:\033[0m"
echo -e "\033[32mSelecciona uno (ej: sda):\033[0m"
echo
lsblk -d -o NAME,SIZE,TYPE | grep disk
echo
read -p "Disco (ej. sda): " unidad
DISCO="/dev/$unidad"

if [ ! -b "$DISCO" ]; then
    echo -e "\033[31mError: La unidad '$DISCO' no existe.\033[0m"
    exit 1
fi

# --- Nuevo: Parámetros EFI ---
EFI_SIZE=513         # MiB (512 + 1 para alineación)
BOOT_SIZE=1024       # MiB (1GB)
SWAP_SIZE=2048       # MiB (2GB)

# Obtener tamaño total del disco en MiB
tamanio_mib=$(($(blockdev --getsize64 "$DISCO") / 1024 / 1024))

# Validar espacio mínimo total
if (( tamanio_mib < (EFI_SIZE + BOOT_SIZE + SWAP_SIZE + 3072) )); then
    echo -e "${RED}Error: Espacio insuficiente. Necesitas al menos 6GB.${NC}"
    exit 1
fi

# --- Nuevo: Crear partición EFI ---
echo -e "\033[32m\n=== Particionado con parted ===\033[0m"
parted "$DISCO" mklabel gpt
parted "$DISCO" mkpart ESP fat32 1MiB ${EFI_SIZE}MiB      # EFI
parted "$DISCO" set 1 esp on
#parted "$DISCO" mkpart primary ext4 ${EFI_SIZE}MiB $((EFI_SIZE + BOOT_SIZE))MiB  # /boot
parted "$DISCO" mkpart primary 513MiB 100%  # LVM

# --- Nuevo: Formatear EFI como FAT32 ---
echo -e "\033[32m\n=== Formateando partición EFI ===\033[0m"
mkfs.fat -F32 "${DISCO}1"

#echo -e "\033[32m\n=== Formateando partición /boot ===\033[0m"
#mkfs.ext4 "${DISCO}2"

echo -e "\033[32m\n=== Encriptando partición LVM ===\033[0m"
cryptsetup luksFormat --type luks2 \
    --pbkdf argon2id \
    --iter-time 4000 \
    --key-size 512 \
    --hash sha3-512 \
    "${DISCO}2"

echo -e "\033[32m\n=== Configurando LVM ===\033[0m"
cryptsetup open "${DISCO}2" cryptlvm
pvcreate /dev/mapper/cryptlvm
vgcreate vol01 /dev/mapper/cryptlvm

# Calcular espacio restante después de swap
ESPACIO_LVM=$(($(vgdisplay vol01 --units m | awk '/Free PE/{print $5}') - SWAP_SIZE))

lvcreate -L "${SWAP_SIZE}M" -n swap vol01
lvcreate -l 100%FREE -n root vol01  # Ajustado para usar todo el espacio restante

echo -e "\033[32m\n=== Formateando volúmenes lógicos ===\033[0m"
mkfs.ext4 /dev/vol01/root
mkswap /dev/vol01/swap

echo -e "\033[32m\n=== Montando particiones ===\033[0m"
mount /dev/vol01/root /mnt
mount --mkdir "${DISCO}1" /mnt/boot

echo -e "\033[32m\nActivando swap...\033[0m"
swapon /dev/vol01/swap

# --- Nuevo: Obtener UUID de la partición LUKS para systemd-boot ---
LUKS_UUID=$(blkid -s UUID -o value "${DISCO}2")
sed -i "s/<TU-UUID-AQUI>/${LUKS_UUID}/g" ./scripts/systemd_boot

echo -e "\033[32m\nProceso finalizado.\033[0m"
echo -e "\033[32mSigue ./paquetes\033[0m"

echo -e "\033[32m==== PAQUETES ====\033[0m"
./scripts/paquetes
